  1 require './markov.rb'
  2 class Elderly < Markov
  3   attr_accessor :q10, :q01
  4   def initialize(alpha,beta,gamma,simulation_number,gradient,initial_state)
  5     @state=[0,1]
  6     @simulation_number = simulation_number
  7     @gradient=gradient.to_f
  8     @aging_param=0
  9     @q10=q10
 10     @q01=q01
 11     #@current_state=0
 12     super(alpha,beta,gamma,initial_state)
 13   end
 14   def aging(time)
 15     #p "simulatio time #{time.to_f/@simulation_number.to_f}"
 16     @aging_param = @aging_param.to_f + @gradient.to_f*(time.to_f/@simulation_number.to_f)**2
 17     @q01 = @q01.to_f + @aging_param.to_f
 18     p "aging parameter"<<@aging_param
 19     # save parameter between 0 and 1
 20     self.guard_parameter
 21     @q10 = @q10.to_f - @aging_param
 22     # save parameter between 0 and 1
 23     self.guard_parameter
 24     self.current_state = self.move_state(0)
 25     p "currnet_state is #{ self.current_state}"
 26   end
 27 end
 28
~
~
~
~
~
~
~
~
~
~
~
~
~
~
elderly.rb                                                                                                                                                 18,25         hÿfÿ
"elderly.rb" 28L, 865C øÿ¼ÿÿ
